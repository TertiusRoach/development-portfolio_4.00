{"version":3,"file":"157.index.js","mappings":"qIACO,SAASA,EAAcC,EAAkBC,GAC9C,OAAQA,GACN,IAAK,KACH,OAAOD,EAASE,QAAQ,UAAW,IACrC,IAAK,KACH,OAAOF,EAASE,QAAQ,QAAS,IACnC,IAAK,KACH,OAAOF,EAASE,QAAQ,QAAS,IACnC,IAAK,KACH,OAAOF,EAASE,QAAQ,QAAS,IACnC,IAAK,KACH,OAAOF,EAASE,QAAQ,QAAS,IACnC,IAAK,KACH,OAAOF,EAASE,QAAQ,QAAS,IAEvC,C,mFCiBA,QAhB2C,SAAHC,GAAiB,IAAXC,EAAID,EAAJC,KACtCC,GAAWN,EAAAA,EAAAA,GAAcK,EAAKC,SAAU,MACxCC,GAAYP,EAAAA,EAAAA,GAAcK,EAAKE,UAAW,MAMhD,OAFAC,EAAAA,EAAAA,YAAU,WAAO,GAAG,CAACF,EAAUC,IAG7BE,EAAAA,cAAA,UAAQC,UAAS,WAAAC,OAAaJ,EAAS,cAAcK,GAAE,GAAAD,OAAKL,EAAQ,KAAAK,OAAIJ,GAAaM,MAAO,CAAEC,OAAQ,IACpGL,EAAAA,cAAA,aAKN,C","sources":["webpack://development-portfolio_4.00/./source/layouts/scripts/buttons.ts","webpack://development-portfolio_4.00/./source/layouts/containers/Footer/ButtonsFooter/ButtonsFooter.tsx"],"sourcesContent":["//--|ðŸ Š buttons.ts ðŸ ˆ|--//\r\nexport function stripBrackets(thisText: string, wrapType: '[]' | '<>' | '()' | '{}' | '--' | '~~'): string {\r\n  switch (wrapType) {\r\n    case '[]':\r\n      return thisText.replace(/[\\[\\]]/g, '');\r\n    case '<>':\r\n      return thisText.replace(/[<>]/g, '');\r\n    case '()':\r\n      return thisText.replace(/[()]/g, '');\r\n    case '{}':\r\n      return thisText.replace(/[{}]/g, '');\r\n    case '--':\r\n      return thisText.replace(/[--]/g, '');\r\n    case '~~':\r\n      return thisText.replace(/[~~]/g, '');\r\n  }\r\n}\r\n\r\n/*\r\nexport function viewBlock(page: 'register' | 'login' | 'password' | 'verify' | 'reset' | 'launch' | 'blocked') {\r\n  const carousel = document.querySelector('main .landing-carousel') as HTMLElement;\r\n  const login = carousel.childNodes[1] as HTMLElement;\r\n  const register = carousel.childNodes[0] as HTMLElement;\r\n  const password = carousel.childNodes[2] as HTMLElement;\r\n  const hideBlock = () => {\r\n    //--|ðŸ ‹ <header> ðŸ ‹|--//\r\n    let launch = document.querySelector(\"header[id*='landing']\") as HTMLElement;\r\n    if (launch.classList.contains('expanded')) {\r\n      launch.className = 'default-header collapsed'; //--|ðŸ ˆ Hide Launch ðŸ ˆ|--//\r\n    }\r\n\r\n    //--|ðŸ ‹ <footer> ðŸ ‹|--//\r\n    let blocked = document.querySelector(\"footer[id*='landing']\") as HTMLElement;\r\n    if (blocked.classList.contains('expanded')) {\r\n      blocked.className = 'default-footer collapsed'; //--|ðŸ ˆ Hide Blocked ðŸ ˆ|--//\r\n    }\r\n\r\n    //--|ðŸ ‹ <leftbar> ðŸ ‹|--//\r\n    let verify = document.getElementById('landing-leftbar') as HTMLElement;\r\n    if (verify.classList.contains('expanded')) {\r\n      verify.className = 'default-leftbar collapsed'; //--|ðŸ ˆ Hide Verify ðŸ ˆ|--//\r\n    }\r\n\r\n    //--|ðŸ ‹ <rightbar> ðŸ ‹|--//\r\n    let reset = document.getElementById('landing-rightbar') as HTMLElement;\r\n    if (reset.classList.contains('expanded')) {\r\n      reset.className = 'default-rightbar collapsed'; //--|ðŸ ˆ Hide Reset ðŸ ˆ|--//\r\n    }\r\n  };\r\n  const showBlock = (view: '<header>' | '<footer>' | '<leftbar>' | '<rightbar>') => {\r\n    switch (view) {\r\n      case '<header>':\r\n        let launch = document.querySelector(\"header[id*='landing']\") as HTMLElement;\r\n        launch.className = 'default-header expanded'; //--|ðŸ ˆ Show Launch ðŸ ˆ|--//\r\n        break;\r\n      case '<footer>':\r\n        let blocked = document.querySelector(\"footer[id*='landing']\") as HTMLElement;\r\n        blocked.className = 'default-footer expanded'; //--|ðŸ ˆ Show Blocked ðŸ ˆ|--//\r\n        break;\r\n      case '<leftbar>':\r\n        let verify = document.querySelectorAll(\"aside[class*='leftbar']\")[0] as HTMLElement;\r\n        verify.className = 'default-leftbar expanded'; //--|ðŸ ˆ Show Verify ðŸ ˆ|--//\r\n        break;\r\n      case '<rightbar>':\r\n        let reset = document.querySelectorAll(\"aside[class*='rightbar']\")[0] as HTMLElement;\r\n        reset.className = 'default-rightbar expanded'; //--|ðŸ ˆ Show Reset ðŸ ˆ|--//\r\n        break;\r\n    }\r\n  };\r\n\r\n  switch (page) {\r\n    case 'register':\r\n      hideBlock();\r\n\r\n      login.className = 'login-section hidden';\r\n      register.className = `${page}-section visible`;\r\n      password.className = 'password-section hidden';\r\n\r\n      carousel.style.transform = 'translateX(0vw)';\r\n      break;\r\n    case 'login':\r\n      hideBlock();\r\n\r\n      login.className = `${page}-section visible`;\r\n      register.className = 'register-section hidden';\r\n      password.className = 'password-section hidden';\r\n\r\n      carousel.style.transform = 'translateX(-100vw)';\r\n      break;\r\n    case 'password':\r\n      hideBlock();\r\n\r\n      login.className = 'login-section hidden';\r\n      register.className = 'register-section hidden';\r\n      password.className = `${page}-section visible`;\r\n\r\n      carousel.style.transform = 'translateX(-200vw)';\r\n      break;\r\n    case 'verify':\r\n      showBlock('<leftbar>');\r\n      break;\r\n    case 'reset':\r\n      showBlock('<rightbar>');\r\n      break;\r\n    case 'launch':\r\n      showBlock('<header>');\r\n      break;\r\n    case 'blocked':\r\n      showBlock('<footer>');\r\n      break;\r\n  }\r\n}\r\n*/\r\n","//--|ðŸ Š ButtonsFooter.tsx ðŸ ˆ|--//\r\n//--|ðŸ ‹ Functions ðŸ ‹|--//\r\nimport { stripBrackets } from '../../../scripts/buttons';\r\n//--|ðŸ ‰ Functions ðŸ ‰|--//\r\n//--|ðŸ ‹ Dependencies ðŸ ‹|--//\r\nimport React, { useEffect } from 'react';\r\n//--|ðŸ ‰ Dependencies ðŸ ‰|--//\r\n//--|ðŸ ‹ Components ðŸ ‹|--//\r\n//--|ðŸ ‰ Components ðŸ ‰|--//\r\n\r\ninterface InfoProps {\r\n  info: {\r\n    pageName: '[buttons]' | string;\r\n    blockName: '<footer>' | string;\r\n    roleName?: string;\r\n  };\r\n}\r\nconst ButtonsFooter: React.FC<InfoProps> = ({ info }) => {\r\n  const pageName = stripBrackets(info.pageName, '[]') as 'buttons';\r\n  const blockName = stripBrackets(info.blockName, '<>') as 'footer';\r\n\r\n  const stateName: 'expanded' | 'collapsed' = 'collapsed';\r\n\r\n  useEffect(() => {}, [pageName, blockName]);\r\n\r\n  return (\r\n    <footer className={`default-${blockName} collapsed`} id={`${pageName}-${blockName}`} style={{ zIndex: 1 }}>\r\n      <menu></menu>\r\n      {/* <MenuLanding info={info} /> */}\r\n      {/* <SectionBlocked info={info} /> */}\r\n    </footer>\r\n  );\r\n};\r\nexport default ButtonsFooter;\r\n"],"names":["stripBrackets","thisText","wrapType","replace","_ref","info","pageName","blockName","useEffect","React","className","concat","id","style","zIndex"],"sourceRoot":""}