{"version":3,"file":"922.index.js","mappings":"qIACO,SAASA,EAAcC,EAAkBC,GAC9C,OAAQA,GACN,IAAK,KACH,OAAOD,EAASE,QAAQ,UAAW,IACrC,IAAK,KACH,OAAOF,EAASE,QAAQ,QAAS,IACnC,IAAK,KACH,OAAOF,EAASE,QAAQ,QAAS,IACnC,IAAK,KACH,OAAOF,EAASE,QAAQ,QAAS,IACnC,IAAK,KACH,OAAOF,EAASE,QAAQ,QAAS,IACnC,IAAK,KACH,OAAOF,EAASE,QAAQ,QAAS,IAEvC,C,mFCqGA,QAlGyC,SAAHC,GAAiB,IAAXC,EAAID,EAAJC,KACpCC,GAAWN,EAAAA,EAAAA,GAAcK,EAAKC,SAAU,MACxCC,GAAYP,EAAAA,EAAAA,GAAcK,EAAKE,UAAW,MA8FhD,OAnCAC,EAAAA,EAAAA,YAAU,WAER,IAAIC,EAAcC,SAASC,cAAc,IAADC,OAClCN,EAAQ,oDAEVO,EAAaH,SAASC,cAAc,IAADC,OACjCN,EAAQ,mDAEVQ,EAAcJ,SAASC,cAAc,IAADC,OAClCN,EAAQ,oDAGRS,EAA+B,GAErC,GAAIF,EAAY,CACd,IAAMG,EAAa,WAAH,OC7Ff,SAAkBV,GACvB,IAAMO,EAAaH,SAASC,cAAc,IAADC,OACnCN,EAAQ,mDAEVW,EAAaP,SAASC,cAAc,IAADC,OAAKN,EAAQ,oCAChDY,EAAcR,SAASC,cAAc,IAADC,OAAKN,EAAQ,6CAOrD,OANkBI,SAASC,cAAc,IAADC,OAClCN,EAAQ,qCAAAM,OAAoCC,EAAWM,QAGjDC,UAAY,GAAHR,OAAMC,EAAWM,MAAK,YAC3CD,EAAYE,UAAY,GAAHR,OAAMM,EAAYG,UAAU,GAAE,WAC3CR,EAAWM,OACjB,IAAK,UACH,OAAQF,EAAWK,MAAMC,UAAY,kBACvC,IAAK,UACH,OAAQN,EAAWK,MAAMC,UAAY,eAAHX,OAA4C,EAA1BK,EAAWO,aAAgB,OACjF,IAAK,UACH,OAAQP,EAAWK,MAAMC,UAAY,eAAHX,OAA4C,EAA1BK,EAAWO,aAAgB,OACjF,IAAK,UACH,OAAQP,EAAWK,MAAMC,UAAY,eAAHX,OAA4C,EAA1BK,EAAWO,aAAgB,OACjF,IAAK,UACH,OAAQP,EAAWK,MAAMC,UAAY,eAAHX,OAA4C,EAA1BK,EAAWO,aAAgB,OACjF,IAAK,UACH,OAAQP,EAAWK,MAAMC,UAAY,eAAHX,OAA4C,EAA1BK,EAAWO,aAAgB,OACjF,IAAK,SACH,OAAQP,EAAWK,MAAMC,UAAY,eAAHX,OAA4C,EAA1BK,EAAWO,aAAgB,OAErF,CDiE+BC,CAASnB,EAAS,EAC3CO,EAAWa,iBAAiB,SAAUV,GACtCD,EAAaY,MAAK,kBAAMd,EAAWe,oBAAoB,SAAUZ,EAAW,GAC9E,CACA,GAAIP,EAAa,CACf,IAAMoB,EAAc,WAAH,OAASC,EAAaxB,EAAS,EAChDG,EAAYiB,iBAAiB,SAAUG,GACvCd,EAAaY,MAAK,kBAAMlB,EAAYmB,oBAAoB,SAAUC,EAAY,GAChF,CACA,GAAIf,EAAa,CACf,IAAMiB,EAAc,WAAH,OAASC,EAAU1B,EAAS,EAC7CQ,EAAYY,iBAAiB,SAAUK,GACvChB,EAAaY,MAAK,kBAAMd,EAAWe,oBAAoB,SAAUG,EAAY,GAC/E,CAEA,OAAO,WACLhB,EAAakB,SAAQ,SAACC,GAAe,OAAKA,GAAiB,GAC7D,CACF,GAAG,CAAC5B,EAAUC,IAEP4B,EAAAA,cAAA,QAAMf,UAAS,GAAAR,OAAKN,EAAQ,UA5Fb,SACpBC,GAEA,OAAQA,GACN,IAAK,YAEL,IAAK,YAEL,IAAK,aAyCL,IAAK,WAEL,IAAK,SACL,QACE,OAAO4B,EAAAA,cAAAA,EAAAA,SAAA,MA3CT,IAAK,WACH,OACEA,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,MAAIf,UAAU,aACZe,EAAAA,cAAA,OACEf,UAAU,aACVgB,IAAI,+LAGRD,EAAAA,cAAA,MAAIf,UAAU,cACZe,EAAAA,cAAA,UAAQE,GAAG,eAAeC,aAAa,gBAAgBC,KAAK,SAC1DJ,EAAAA,cAAA,UAAQhB,MAAM,iBAAgB,aAC9BgB,EAAAA,cAAA,UAAQhB,MAAM,iBAAgB,aAC9BgB,EAAAA,cAAA,UAAQhB,MAAM,iBAAgB,aAC9BgB,EAAAA,cAAA,UAAQhB,MAAM,iBAAgB,aAC9BgB,EAAAA,cAAA,UAAQhB,MAAM,iBAAgB,eAGlCgB,EAAAA,cAAA,MAAIf,UAAU,aACZe,EAAAA,cAAA,UAAQE,GAAG,cAAcC,aAAa,UAAUC,KAAK,QACnDJ,EAAAA,cAAA,UAAQhB,MAAM,WAAU,QACxBgB,EAAAA,cAAA,UAAQhB,MAAM,WAAU,QACxBgB,EAAAA,cAAA,UAAQhB,MAAM,WAAU,QACxBgB,EAAAA,cAAA,UAAQhB,MAAM,WAAU,QACxBgB,EAAAA,cAAA,UAAQhB,MAAM,WAAU,QACxBgB,EAAAA,cAAA,UAAQhB,MAAM,WAAU,QACxBgB,EAAAA,cAAA,UAAQhB,MAAM,UAAS,SAG3BgB,EAAAA,cAAA,MAAIf,UAAU,cACZe,EAAAA,cAAA,UAAQE,GAAG,eAAeC,aAAa,aAAaC,KAAK,SACvDJ,EAAAA,cAAA,UAAQhB,MAAM,aAAY,SAC1BgB,EAAAA,cAAA,UAAQhB,MAAM,cAAa,UAC3BgB,EAAAA,cAAA,UAAQhB,MAAM,eAAc,WAC5BgB,EAAAA,cAAA,UAAQhB,MAAM,cAAa,aAWzC,CAqC6CqB,CAAcnC,EAAKE,WAClE,EAGA,IAAMyB,EAAY,SAAC1B,GACjB,IAAI0B,EAAYtB,SAASC,cAAc,IAADC,OAAKN,EAAQ,oDAW/C,OAVI0B,EAAUb,MAUPsB,QAAQC,IAAI,GAAD9B,OAAIoB,EAAUb,OAEtC,EACMW,EAAe,SAACxB,GACpB,IAAIqC,EAAYjC,SAASC,cAAc,IAADC,OAAKN,EAAQ,oDAa/C,OAXIqC,EAAUxB,MAWPsB,QAAQC,IAAI,GAAD9B,OAAI+B,EAAUxB,OAEtC,EElFA,QAnD2C,SAAHf,GAAiB,IAAXC,EAAID,EAAJC,KACtCC,GAAWN,EAAAA,EAAAA,GAAcK,EAAKC,SAAU,MACxCC,GAAYP,EAAAA,EAAAA,GAAcK,EAAKE,UAAW,MAMhD,OAFAC,EAAAA,EAAAA,YAAU,WAAO,GAAG,CAACF,EAAUC,IAG7B4B,EAAAA,cAAA,UAAQf,UAAS,WAAAR,OAAaL,EAAS,KAAAK,OALG,aAKcyB,GAAE,GAAAzB,OAAKN,EAAQ,KAAAM,OAAIL,GAAae,MAAO,CAAEsB,OAAQ,IACvGT,EAAAA,cAACU,EAAW,CAACxC,KAAMA,IAwCzB,C","sources":["webpack://development-portfolio_4.00/./source/layouts/scripts/buttons.ts","webpack://development-portfolio_4.00/./source/layouts/components/Menu/buttons/Menu.buttons.tsx","webpack://development-portfolio_4.00/./source/layouts/components/Menu/buttons/Menu_buttons.ts","webpack://development-portfolio_4.00/./source/layouts/containers/Header/ButtonsHeader/ButtonsHeader.tsx"],"sourcesContent":["//--|ðŸ Š buttons.ts ðŸ ˆ|--//\r\nexport function stripBrackets(thisText: string, wrapType: '[]' | '<>' | '()' | '{}' | '--' | '~~'): string {\r\n  switch (wrapType) {\r\n    case '[]':\r\n      return thisText.replace(/[\\[\\]]/g, '');\r\n    case '<>':\r\n      return thisText.replace(/[<>]/g, '');\r\n    case '()':\r\n      return thisText.replace(/[()]/g, '');\r\n    case '{}':\r\n      return thisText.replace(/[{}]/g, '');\r\n    case '--':\r\n      return thisText.replace(/[--]/g, '');\r\n    case '~~':\r\n      return thisText.replace(/[~~]/g, '');\r\n  }\r\n}\r\n\r\n/*\r\nexport function viewBlock(page: 'register' | 'login' | 'password' | 'verify' | 'reset' | 'launch' | 'blocked') {\r\n  const carousel = document.querySelector('main .landing-carousel') as HTMLElement;\r\n  const login = carousel.childNodes[1] as HTMLElement;\r\n  const register = carousel.childNodes[0] as HTMLElement;\r\n  const password = carousel.childNodes[2] as HTMLElement;\r\n  const hideBlock = () => {\r\n    //--|ðŸ ‹ <header> ðŸ ‹|--//\r\n    let launch = document.querySelector(\"header[id*='landing']\") as HTMLElement;\r\n    if (launch.classList.contains('expanded')) {\r\n      launch.className = 'default-header collapsed'; //--|ðŸ ˆ Hide Launch ðŸ ˆ|--//\r\n    }\r\n\r\n    //--|ðŸ ‹ <footer> ðŸ ‹|--//\r\n    let blocked = document.querySelector(\"footer[id*='landing']\") as HTMLElement;\r\n    if (blocked.classList.contains('expanded')) {\r\n      blocked.className = 'default-footer collapsed'; //--|ðŸ ˆ Hide Blocked ðŸ ˆ|--//\r\n    }\r\n\r\n    //--|ðŸ ‹ <leftbar> ðŸ ‹|--//\r\n    let verify = document.getElementById('landing-leftbar') as HTMLElement;\r\n    if (verify.classList.contains('expanded')) {\r\n      verify.className = 'default-leftbar collapsed'; //--|ðŸ ˆ Hide Verify ðŸ ˆ|--//\r\n    }\r\n\r\n    //--|ðŸ ‹ <rightbar> ðŸ ‹|--//\r\n    let reset = document.getElementById('landing-rightbar') as HTMLElement;\r\n    if (reset.classList.contains('expanded')) {\r\n      reset.className = 'default-rightbar collapsed'; //--|ðŸ ˆ Hide Reset ðŸ ˆ|--//\r\n    }\r\n  };\r\n  const showBlock = (view: '<header>' | '<footer>' | '<leftbar>' | '<rightbar>') => {\r\n    switch (view) {\r\n      case '<header>':\r\n        let launch = document.querySelector(\"header[id*='landing']\") as HTMLElement;\r\n        launch.className = 'default-header expanded'; //--|ðŸ ˆ Show Launch ðŸ ˆ|--//\r\n        break;\r\n      case '<footer>':\r\n        let blocked = document.querySelector(\"footer[id*='landing']\") as HTMLElement;\r\n        blocked.className = 'default-footer expanded'; //--|ðŸ ˆ Show Blocked ðŸ ˆ|--//\r\n        break;\r\n      case '<leftbar>':\r\n        let verify = document.querySelectorAll(\"aside[class*='leftbar']\")[0] as HTMLElement;\r\n        verify.className = 'default-leftbar expanded'; //--|ðŸ ˆ Show Verify ðŸ ˆ|--//\r\n        break;\r\n      case '<rightbar>':\r\n        let reset = document.querySelectorAll(\"aside[class*='rightbar']\")[0] as HTMLElement;\r\n        reset.className = 'default-rightbar expanded'; //--|ðŸ ˆ Show Reset ðŸ ˆ|--//\r\n        break;\r\n    }\r\n  };\r\n\r\n  switch (page) {\r\n    case 'register':\r\n      hideBlock();\r\n\r\n      login.className = 'login-section hidden';\r\n      register.className = `${page}-section visible`;\r\n      password.className = 'password-section hidden';\r\n\r\n      carousel.style.transform = 'translateX(0vw)';\r\n      break;\r\n    case 'login':\r\n      hideBlock();\r\n\r\n      login.className = `${page}-section visible`;\r\n      register.className = 'register-section hidden';\r\n      password.className = 'password-section hidden';\r\n\r\n      carousel.style.transform = 'translateX(-100vw)';\r\n      break;\r\n    case 'password':\r\n      hideBlock();\r\n\r\n      login.className = 'login-section hidden';\r\n      register.className = 'register-section hidden';\r\n      password.className = `${page}-section visible`;\r\n\r\n      carousel.style.transform = 'translateX(-200vw)';\r\n      break;\r\n    case 'verify':\r\n      showBlock('<leftbar>');\r\n      break;\r\n    case 'reset':\r\n      showBlock('<rightbar>');\r\n      break;\r\n    case 'launch':\r\n      showBlock('<header>');\r\n      break;\r\n    case 'blocked':\r\n      showBlock('<footer>');\r\n      break;\r\n  }\r\n}\r\n*/\r\n","//--|ðŸ Š Menu.buttons.tsx ðŸ ˆ|--//\r\n//--|ðŸ ‹ Styles ðŸ ‹|--//\r\nimport './Menu.buttons.scss';\r\n//--|ðŸ ‰ Styles ðŸ ‰|--//\r\n//--|ðŸ ‹ Functions ðŸ ‹|--//\r\nimport { showSize } from './Menu_buttons';\r\nimport { stripBrackets } from '../../../scripts/buttons';\r\n//--|ðŸ ‰ Functions ðŸ ‰|--//\r\n//--|ðŸ ‹ Dependencies ðŸ ‹|--//\r\nimport React, { useEffect } from 'react';\r\n//--|ðŸ ‰ Dependencies ðŸ ‰|--//\r\n\r\ninterface InfoProps {\r\n  info: {\r\n    pageName: '[buttons]' | '[landing]' | '[overtime]' | '[ticketing]' | '[hyperlink]' | string;\r\n    blockName: '<overlay>' | '<leftbar>' | '<rightbar>' | '<header>' | '<footer>' | '<main>' | string;\r\n    roleName?: '(established)' | '(freelancing)' | '(manager)' | '(employee)' | '(specialist)' | '(technician)' | string;\r\n  };\r\n}\r\nconst MenuButtons: React.FC<InfoProps> = ({ info }) => {\r\n  const pageName = stripBrackets(info.pageName, '[]') as 'buttons';\r\n  const blockName = stripBrackets(info.blockName, '<>') as string;\r\n\r\n  const handleButtons = (\r\n    blockName: '<overlay>' | '<leftbar>' | '<rightbar>' | '<header>' | '<footer>' | '<main>' | string\r\n  ) => {\r\n    switch (blockName) {\r\n      case '<overlay>':\r\n        return <></>;\r\n      case '<leftbar>':\r\n        return <></>;\r\n      case '<rightbar>':\r\n        return <></>;\r\n      case '<header>':\r\n        return (\r\n          <>\r\n            <li className=\"logo-list\">\r\n              <img\r\n                className=\"logo-image\"\r\n                src=\"https://raw.githubusercontent.com/TertiusRoach/development-portfolio_4.00/81562c9457867ac7e8724b068a85db04f094477a/source/assets/svg-files/my-signature/signature-icon/primary-medium.svg\"\r\n              />\r\n            </li>\r\n            <li className=\"style-list\">\r\n              <select id=\"style-select\" defaultValue=\"default-style\" name=\"style\">\r\n                <option value=\"stretch-style\">[Stretch]</option>\r\n                <option value=\"cleaned-style\">[Cleaned]</option>\r\n                <option value=\"grading-style\">[Grading]</option>\r\n                <option value=\"framing-style\">[Framing]</option>\r\n                <option value=\"default-style\">[Default]</option>\r\n              </select>\r\n            </li>\r\n            <li className=\"size-list\">\r\n              <select id=\"size-select\" defaultValue=\"h1-size\" name=\"size\">\r\n                <option value=\"h1-size\">&lt;h1&gt;</option>\r\n                <option value=\"h2-size\">&lt;h2&gt;</option>\r\n                <option value=\"h3-size\">&lt;h3&gt;</option>\r\n                <option value=\"h4-size\">&lt;h4&gt;</option>\r\n                <option value=\"h5-size\">&lt;h5&gt;</option>\r\n                <option value=\"h6-size\">&lt;h6&gt;</option>\r\n                <option value=\"p-size\">&lt;p&gt;</option>\r\n              </select>\r\n            </li>\r\n            <li className=\"color-list\">\r\n              <select id=\"color-select\" defaultValue=\"mono-color\" name=\"color\">\r\n                <option value=\"red-color\">(Red)</option>\r\n                <option value=\"blue-color\">(Blue)</option>\r\n                <option value=\"green-color\">(Green)</option>\r\n                <option value=\"mono-color\">(Mono)</option>\r\n              </select>\r\n            </li>\r\n          </>\r\n        );\r\n      case '<footer>':\r\n        return <></>;\r\n      case '<main>':\r\n      default:\r\n        return <></>;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    //--|ðŸ ‹ Event Listeners ðŸ ‹|--//\r\n    let selectStyle = document.querySelector(\r\n      `#${pageName}-header .buttons-menu li[class*=\"style\"] select`\r\n    ) as HTMLSelectElement;\r\n    let selectSize = document.querySelector(\r\n      `#${pageName}-header .buttons-menu li[class*=\"size\"] select`\r\n    ) as HTMLSelectElement;\r\n    let selectColor = document.querySelector(\r\n      `#${pageName}-header .buttons-menu li[class*=\"color\"] select`\r\n    ) as HTMLSelectElement;\r\n\r\n    const cleanupArray: (() => void)[] = [];\r\n\r\n    if (selectSize) {\r\n      const handleSize = () => showSize(pageName);\r\n      selectSize.addEventListener('change', handleSize);\r\n      cleanupArray.push(() => selectSize.removeEventListener('change', handleSize));\r\n    }\r\n    if (selectStyle) {\r\n      const handleStyle = () => reloadDesign(pageName);\r\n      selectStyle.addEventListener('change', handleStyle);\r\n      cleanupArray.push(() => selectStyle.removeEventListener('change', handleStyle));\r\n    }\r\n    if (selectColor) {\r\n      const handleColor = () => viewColor(pageName);\r\n      selectColor.addEventListener('change', handleColor);\r\n      cleanupArray.push(() => selectSize.removeEventListener('change', handleColor));\r\n    }\r\n\r\n    return () => {\r\n      cleanupArray.forEach((cleanupFunction) => cleanupFunction());\r\n    };\r\n  }, [pageName, blockName]);\r\n\r\n  return <menu className={`${pageName}-menu`}>{handleButtons(info.blockName)}</menu>;\r\n};\r\nexport default MenuButtons;\r\n\r\nconst viewColor = (pageName: string) => {\r\n  let viewColor = document.querySelector(`#${pageName}-header .buttons-menu li[class*=\"color\"] select`) as HTMLSelectElement;\r\n  switch (viewColor.value) {\r\n    case 'mono-color':\r\n      return console.log(`${viewColor.value}`);\r\n    case 'red-color':\r\n      return console.log(`${viewColor.value}`);\r\n    case 'green-color':\r\n      return console.log(`${viewColor.value}`);\r\n    case 'blue-color':\r\n      return console.log(`${viewColor.value}`);\r\n    default:\r\n      return console.log(`${viewColor.value}`);\r\n  }\r\n};\r\nconst reloadDesign = (pageName: string) => {\r\n  let viewStyle = document.querySelector(`#${pageName}-header .buttons-menu li[class*=\"style\"] select`) as HTMLSelectElement;\r\n\r\n  switch (viewStyle.value) {\r\n    case 'stretch-style':\r\n      return console.log(`${viewStyle.value}`);\r\n    case 'cleaned-style':\r\n      return console.log(`${viewStyle.value}`);\r\n    case 'grading-style':\r\n      return console.log(`${viewStyle.value}`);\r\n\r\n    case 'framing-style':\r\n      return console.log(`${viewStyle.value}`);\r\n    default:\r\n      return console.log(`${viewStyle.value}`);\r\n  }\r\n};\r\n","//--|ðŸ Š Menu_buttons.ts ðŸ ˆ|--//\r\n\r\nexport function showSize(pageName: string) {\r\n  const selectSize = document.querySelector(\r\n    `#${pageName}-header .buttons-menu li[class*=\"size\"] select`\r\n  ) as HTMLSelectElement;\r\n  let mainSlider = document.querySelector(`#${pageName}-main section[class*=\"buttons\"]`) as HTMLElement;\r\n  let prevElement = document.querySelector(`#${pageName}-main section[class*=\"buttons\"] .visible`) as HTMLDivElement;\r\n  let nextElement = document.querySelector(\r\n    `#${pageName}-main section[class*=\"buttons\"] .${selectSize.value}`\r\n  ) as HTMLDivElement;\r\n\r\n  nextElement.className = `${selectSize.value} visible`;\r\n  prevElement.className = `${prevElement.classList[0]} hidden`;\r\n  switch (selectSize.value) {\r\n    case 'h1-size':\r\n      return (mainSlider.style.transform = `translateY(0px)`);\r\n    case 'h2-size':\r\n      return (mainSlider.style.transform = `translateY(-${mainSlider.offsetHeight * 1}px)`);\r\n    case 'h3-size':\r\n      return (mainSlider.style.transform = `translateY(-${mainSlider.offsetHeight * 2}px)`);\r\n    case 'h4-size':\r\n      return (mainSlider.style.transform = `translateY(-${mainSlider.offsetHeight * 3}px)`);\r\n    case 'h5-size':\r\n      return (mainSlider.style.transform = `translateY(-${mainSlider.offsetHeight * 4}px)`);\r\n    case 'h6-size':\r\n      return (mainSlider.style.transform = `translateY(-${mainSlider.offsetHeight * 5}px)`);\r\n    case 'p-size':\r\n      return (mainSlider.style.transform = `translateY(-${mainSlider.offsetHeight * 6}px)`);\r\n  }\r\n}\r\n","//--|ðŸ Š ButtonsHeader.tsx ðŸ ˆ|--//\r\n//--|ðŸ ‹ Functions ðŸ ‹|--//\r\nimport { stripBrackets } from '../../../scripts/buttons';\r\n//--|ðŸ ‰ Functions ðŸ ‰|--//\r\n//--|ðŸ ‹ Dependencies ðŸ ‹|--//\r\nimport React, { useEffect } from 'react';\r\n//--|ðŸ ‰ Dependencies ðŸ ‰|--//\r\n//--|ðŸ ‹ Components ðŸ ‹|--//\r\nimport MenuButtons from '../../../components/Menu/buttons/Menu.buttons';\r\n//--|ðŸ ‰ Components ðŸ ‰|--//\r\ninterface InfoProps {\r\n  info: {\r\n    pageName: '[buttons]' | string;\r\n    blockName: '<header>' | string;\r\n    roleName?: string;\r\n  };\r\n}\r\nconst ButtonsHeader: React.FC<InfoProps> = ({ info }) => {\r\n  const pageName = stripBrackets(info.pageName, '[]') as 'buttons';\r\n  const blockName = stripBrackets(info.blockName, '<>') as 'header';\r\n\r\n  const stateName: 'expanded' | 'collapsed' = 'collapsed';\r\n\r\n  useEffect(() => {}, [pageName, blockName]);\r\n\r\n  return (\r\n    <header className={`default-${blockName} ${stateName}`} id={`${pageName}-${blockName}`} style={{ zIndex: 1 }}>\r\n      <MenuButtons info={info} />\r\n      {/* <menu className={`${pageName}-menu`}>\r\n        <li className=\"logo-list\">\r\n          <img\r\n            className=\"logo-image\"\r\n            src=\"https://raw.githubusercontent.com/TertiusRoach/development-portfolio_4.00/81562c9457867ac7e8724b068a85db04f094477a/source/assets/svg-files/my-signature/signature-icon/primary-medium.svg\"\r\n          />\r\n        </li>\r\n        <li className=\"style-list\">\r\n          <select id=\"style-select\" defaultValue=\"default-style\" name=\"style\">\r\n            <option value=\"stretch-style\">[Stretch]</option>\r\n            <option value=\"cleaned-style\">[Cleaned]</option>\r\n            <option value=\"grading-style\">[Grading]</option>\r\n            <option value=\"framing-style\">[Framing]</option>\r\n            <option value=\"default-style\">[Default]</option>\r\n          </select>\r\n        </li>\r\n        <li className=\"size-list\">\r\n          <select id=\"size-select\" defaultValue=\"h1-size\" name=\"size\">\r\n            <option value=\"h1-size\">&lt;h1&gt;</option>\r\n            <option value=\"h2-size\">&lt;h2&gt;</option>\r\n            <option value=\"h3-size\">&lt;h3&gt;</option>\r\n            <option value=\"h4-size\">&lt;h4&gt;</option>\r\n            <option value=\"h5-size\">&lt;h5&gt;</option>\r\n            <option value=\"h6-size\">&lt;h6&gt;</option>\r\n            <option value=\"p-size\">&lt;p&gt;</option>\r\n          </select>\r\n        </li>\r\n        <li className=\"color-list\">\r\n          <select id=\"color-select\" defaultValue=\"mono-color\" name=\"color\">\r\n            <option value=\"red-color\">(Red)</option>\r\n            <option value=\"blue-color\">(Blue)</option>\r\n            <option value=\"green-color\">(Green)</option>\r\n            <option value=\"mono-color\">(Mono)</option>\r\n          </select>\r\n        </li>\r\n      </menu> */}\r\n      {/* <section className={`${pageName}-section`}></section> */}\r\n    </header>\r\n  );\r\n};\r\nexport default ButtonsHeader;\r\n"],"names":["stripBrackets","thisText","wrapType","replace","_ref","info","pageName","blockName","useEffect","selectStyle","document","querySelector","concat","selectSize","selectColor","cleanupArray","handleSize","mainSlider","prevElement","value","className","classList","style","transform","offsetHeight","showSize","addEventListener","push","removeEventListener","handleStyle","reloadDesign","handleColor","viewColor","forEach","cleanupFunction","React","src","id","defaultValue","name","handleButtons","console","log","viewStyle","zIndex","MenuButtons"],"sourceRoot":""}