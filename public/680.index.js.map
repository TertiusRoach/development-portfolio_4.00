{"version":3,"file":"680.index.js","mappings":"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","sources":["webpack://development-portfolio_4.00/./source/layouts/components/List/countdown/List.countdown.tsx","webpack://development-portfolio_4.00/./source/layouts/components/List/countdown/List_countdown.ts","webpack://development-portfolio_4.00/./source/layouts/components/Section/blocked/Section.blocked.tsx","webpack://development-portfolio_4.00/./source/layouts/containers/Footer/LandingFooter/LandingFooter.tsx"],"sourcesContent":["// List.countdown.tsx\r\n//--|ðŸ ‹ Styles ðŸ ‹|--//\r\nimport './List.countdown.scss';\r\n//--|ðŸ ‰ Styles ðŸ ‰|--//\r\n//--|ðŸ ‹ Dependencies ðŸ ‹|--//\r\nimport axios, { AxiosError } from 'axios';\r\nimport React, { useEffect, useState, createContext, useContext } from 'react';\r\n//--|ðŸ ‰ Dependencies ðŸ ‰|--//\r\n//--|ðŸ ‹ Context ðŸ ‹|--//\r\n//--|ðŸ ‰ Context ðŸ ‰|--//\r\n//--|ðŸ ‹ Components ðŸ ‹|--//\r\n//--|ðŸ ‰ Components ðŸ ‰|--//\r\n//--|ðŸ ‹ Functions ðŸ ‹|--//\r\nimport { scaleText, createSquare } from './List_countdown';\r\nimport { viewBlock, viewText, axiosError } from '../../../pages/landing';\r\n//--|ðŸ ‰ Functions ðŸ ‰|--//\r\ninterface InfoProps {\r\n  info: {\r\n    resolution: string;\r\n    orientation: 'desktop-landscape' | 'mobile-portrait' | 'tablet-square' | string;\r\n    identification: 'index' | 'resume' | 'ticket' | 'university' | 'fitness' | 'landing' | string;\r\n  };\r\n}\r\ntype Counters = {\r\n  //--|ðŸ ‹ Define a type alias for the countdown state ðŸ ‹|--//\r\n  days: number;\r\n  hours: number;\r\n  minutes: number;\r\n  seconds: number;\r\n};\r\nconst ListCountdown: React.FC<InfoProps> = ({ info }) => {\r\n  const blockName = 'footer';\r\n  const pageName = info.identification;\r\n\r\n  //--|ðŸ ‹ Local Input States ðŸ ‹|--//\r\n  let [time, setTime] = useState({ days: 0, hours: 0, minutes: 0, seconds: 0 });\r\n\r\n  useEffect(() => {\r\n    let refreshClock = scaleText();\r\n    let refreshSquare = createSquare(); // Runs `createSquare()` and gets cleanup function\r\n    let refreshTimer = loadTimer(setTime); // Runs `loadTimer()`\r\n\r\n    return () => {\r\n      refreshClock();\r\n      refreshSquare(); // Cleans up the resize event listener\r\n      refreshTimer?.(); // If `loadTimer` returns a cleanup function, call it\r\n    };\r\n  }, [pageName, blockName]);\r\n\r\n  return (\r\n    <ol className=\"list-countdown\">\r\n      <li className=\"clock-days\">\r\n        <span>{time.days}</span>\r\n      </li>\r\n      <li className=\"clock-hours\">\r\n        <span>{String(time.hours).padStart(2, '0')}</span>\r\n      </li>\r\n      <li className=\"clock-minutes\">\r\n        <span>{String(time.minutes).padStart(2, '0')}</span>\r\n      </li>\r\n      <li className=\"clock-seconds\">\r\n        <span>{String(time.seconds).padStart(2, '0')}</span>\r\n      </li>\r\n    </ol>\r\n  );\r\n};\r\nexport default ListCountdown;\r\n\r\nconst loadTimer = (setTime: React.Dispatch<React.SetStateAction<Counters>>) => {\r\n  //--|ðŸ ‹ Select the footer element with an ID containing \"footer\" ðŸ ‹|--//\r\n  let footer = document.querySelector('footer[id*=\"footer\"]');\r\n  let interval: NodeJS.Timeout | null = null; //--|ðŸ ˆ Store reference to setInterval, so we can clear it later ðŸ ˆ|--//\r\n\r\n  let updateCountdown = (targetDate: Date) => {\r\n    /**\r\n     * Function to calculate the remaining time and update state\r\n     * @param targetDate - The future date when restriction expires\r\n     **/\r\n    var present = new Date(); //--|ðŸ ˆ Get the current time ðŸ ˆ|--//\r\n    var interval = targetDate.getTime() - present.getTime(); //--|ðŸ ˆ Difference between target and current time in milliseconds ðŸ ˆ|--//\r\n\r\n    if (interval <= 0) {\r\n      //--|ðŸ ‹ If the countdown has expired, set everything to 0 ðŸ ‹|--//\r\n      setTime({ days: 0, hours: 0, minutes: 0, seconds: 0 });\r\n      return;\r\n    }\r\n\r\n    //--|ðŸ ‹ Calculate time left in days, hours, minutes, and seconds ðŸ ‹|--//\r\n    setTime({\r\n      days: Math.floor(interval / (1000 * 60 * 60 * 24)), //--|ðŸ ˆ Convert milliseconds to days ðŸ ˆ|--//\r\n      hours: Math.floor((interval / (1000 * 60 * 60)) % 24), //--|ðŸ ˆ Convert to hours, keeping remainder within 24h ðŸ ˆ|--//\r\n      minutes: Math.floor((interval / (1000 * 60)) % 60), //--|ðŸ ˆ Convert to minutes, keeping remainder within 60min ðŸ ˆ|--//\r\n      seconds: Math.floor((interval / 1000) % 60), //--|ðŸ ˆ Convert to seconds, keeping remainder within 60sec ðŸ ˆ|--//\r\n    });\r\n  };\r\n\r\n  let observeFooter = new MutationObserver((mutationsList) => {\r\n    /**\r\n     * MutationObserver listens for attribute changes on the footer (e.g., class changes)\r\n     **/\r\n    for (const mutation of mutationsList) {\r\n      if (mutation.attributeName === 'class') {\r\n        const currentClass = (mutation.target as HTMLElement).className; //--|ðŸ ˆ Get the new class name ðŸ ˆ|--//\r\n\r\n        if (currentClass.includes('expanded')) {\r\n          //--|ðŸ ‰ Footer has been expanded, so fetch the countdown from the server ðŸ ‰|--//\r\n\r\n          //--|ðŸ ‹ Select the email input field inside a div that contains \"inputs\" in its class ðŸ ‹|--//\r\n          const emailInput = document.querySelector<HTMLInputElement>('div[class*=\"inputs\"] #email');\r\n\r\n          if (!emailInput) {\r\n            console.error('Email input not found.');\r\n            return; //--|ðŸ ˆ Stop execution if the email input field is missing ðŸ ˆ|--//\r\n          }\r\n\r\n          //--|ðŸ ‹ Make an API request to fetch the countdown expiration date ðŸ ‹|--//\r\n          let route = 'blocked';\r\n          let link = 'http://localhost:3000';\r\n          axios\r\n            .post(`${link}/users/${route}`, { email: emailInput.value })\r\n            .then((response) => {\r\n              const { data } = response.data; //--|ðŸ ˆ Extract the relevant data ðŸ ˆ|--//\r\n              const targetDate = new Date(data.restrictionExpiresAt); //--|ðŸ ˆ Convert to a Date object ðŸ ˆ|--//\r\n\r\n              //--|ðŸ ‹ Immediately update countdown when data is received ðŸ ‹|--//\r\n              updateCountdown(targetDate);\r\n\r\n              //--|ðŸ ‹ Clear any existing interval before setting a new one ðŸ ‹|--//\r\n              if (interval) clearInterval(interval);\r\n\r\n              //--|ðŸ ‹ Start a new interval to update countdown every second ðŸ ‹|--//\r\n              interval = setInterval(() => updateCountdown(targetDate), 1000);\r\n            })\r\n            .catch((error) => console.error('Error fetching countdown:', error));\r\n        }\r\n      }\r\n    }\r\n  });\r\n  if (!footer) return; //--|ðŸ ˆ Exit early if the footer is not found ðŸ ˆ|--//\r\n  observeFooter.observe(footer, { attributes: true }); //--|ðŸ ˆ Start observing the footer for attribute changes (such as class changes) ðŸ ˆ|--//\r\n\r\n  /**\r\n   * Cleanup function - Runs when component unmounts or dependencies change\r\n   **/\r\n  return () => {\r\n    observeFooter.disconnect(); //--|ðŸ ˆ Stop observing the footer ðŸ ˆ|--//\r\n    if (interval) clearInterval(interval); //--|ðŸ ˆ Clear the countdown interval if it exists ðŸ ˆ|--//\r\n  };\r\n};\r\n","export const scaleText = () => {\r\n  let updateText = () => {\r\n    //--|ðŸ ‹ Define an array containing the time units we need to scale text for ðŸ ‹|--//\r\n    var timeUnits = ['days', 'hours', 'minutes', 'seconds'];\r\n\r\n    //--|ðŸ ‹ Loop through each time unit in the array ðŸ ‹|--//\r\n    timeUnits.forEach((unit) => {\r\n      //--|ðŸ ‹ Select the corresponding list item (li) based on its class name (e.g., \"days\", \"hours\", etc.) ðŸ ‹|--//\r\n      var wrapper = document.querySelector(`li[class*=\"${unit}\"]`) as HTMLElement;\r\n\r\n      //--|ðŸ ‹ Select the <span> element inside the wrapper, which contains the numerical countdown value ðŸ ‹|--//\r\n      var counter = wrapper?.querySelector('span') as HTMLSpanElement;\r\n\r\n      //--|ðŸ ‹ Ensure that both the wrapper and counter elements exist before proceeding ðŸ ‹|--//\r\n      if (wrapper && counter) {\r\n        /**\r\n         * Set a scale factor:\r\n         * - \"days\" will take the full width of its container.\r\n         * - Other units (hours, minutes, seconds) will take only a portion (1.75 times smaller).\r\n         *   This ensures they remain proportionate in the layout.\r\n         */\r\n        var scaleFactor = unit === 'days' ? 1 : 1.75;\r\n\r\n        //--|ðŸ ‹ Set the font size of the counter dynamically based on the wrapper's width ðŸ ‹|--//\r\n        counter.style.fontSize = `${wrapper.offsetWidth / scaleFactor}px`;\r\n      }\r\n    });\r\n  };\r\n\r\n  //--|ðŸ ‹ Run initially ðŸ ‹|--//\r\n  updateText();\r\n\r\n  //--|ðŸ ‹ Add resize event listener ðŸ ‹|--//\r\n  window.addEventListener('resize', updateText);\r\n\r\n  //--|ðŸ ‹ Cleanup function to remove event listener when unmounted ðŸ ‹|--//\r\n  return () => {\r\n    window.removeEventListener('resize', updateText);\r\n  };\r\n};\r\n\r\nexport const createSquare = () => {\r\n  let updateSquare = () => {\r\n    let listItem = document.querySelectorAll('.list-countdown li')[0] as HTMLElement;\r\n    if (listItem) {\r\n      listItem.style.height = `${listItem.offsetWidth}px`;\r\n    }\r\n  };\r\n\r\n  //--|ðŸ ‹ Run initially ðŸ ‹|--//\r\n  updateSquare();\r\n\r\n  //--|ðŸ ‹ Add resize event listener ðŸ ‹|--//\r\n  window.addEventListener('resize', updateSquare);\r\n\r\n  //--|ðŸ ‹ Cleanup function to remove event listener when unmounted ðŸ ‹|--//\r\n  return () => {\r\n    window.removeEventListener('resize', updateSquare);\r\n  };\r\n};\r\n","// Section.blocked.tsx\r\n//--|ðŸ ‹ Styles ðŸ ‹|--//\r\nimport './Section.blocked.scss';\r\n//--|ðŸ ‰ Styles ðŸ ‰|--//\r\n//--|ðŸ ‹ Dependencies ðŸ ‹|--//\r\nimport axios, { AxiosError } from 'axios';\r\nimport React, { useEffect, useState, createContext, useContext } from 'react';\r\n//--|ðŸ ‰ Dependencies ðŸ ‰|--//\r\n//--|ðŸ ‹ Context ðŸ ‹|--//\r\nimport { useEmail } from '../../../../modules/context/EmailContext';\r\nimport { usePassword } from '../../../../modules/context/PasswordContext';\r\n//--|ðŸ ‰ Context ðŸ ‰|--//\r\n//--|ðŸ ‹ Components ðŸ ‹|--//\r\nimport ListCountdown from '../../List/countdown/List.countdown';\r\n//--|ðŸ ‰ Components ðŸ ‰|--//\r\n//--|ðŸ ‹ Functions ðŸ ‹|--//\r\nimport { viewBlock, viewText, axiosError } from '../../../pages/landing';\r\n//--|ðŸ ‰ Functions ðŸ ‰|--//\r\ninterface InfoProps {\r\n  info: {\r\n    resolution: string;\r\n    orientation: 'desktop-landscape' | 'mobile-portrait' | string;\r\n    identification: 'landing' | 'overtime' | 'ticketing' | 'hyperlink' | string;\r\n  };\r\n}\r\nconst SectionBlocked: React.FC<InfoProps> = ({ info }) => {\r\n  const blockName = 'footer';\r\n  const pageName = info.identification;\r\n\r\n  //--|ðŸ ‹ Local Input States ðŸ ‹|--//\r\n  let { email, setEmail } = useEmail();\r\n  let { password, setPassword } = usePassword();\r\n\r\n  //--|ðŸ ‹ Button Action States ðŸ ‹|--//\r\n  let [submit, setSubmit] = useState(false);\r\n  let [attempts, setAttempts] = useState(0);\r\n\r\n  const handleBlocked = async (event: any) => {\r\n    console.log(event);\r\n  };\r\n\r\n  useEffect(() => {}, [pageName, blockName]);\r\n\r\n  return (\r\n    <section className=\"blocked-section\">\r\n      <div className=\"blocked-text\">\r\n        <h1>Your account has been blocked.</h1>\r\n      </div>\r\n      <div className=\"blocked-branding\" style={{ zIndex: 1 }}>\r\n        <img\r\n          src=\"https://raw.githubusercontent.com/TertiusRoach/development-portfolio_4.00/d11394a960db3ea88c21e28aa8035c3f40bdad7c/source/assets/svg-files/archive-images/tertius-roach/signature-icon/primary-light.svg\"\r\n          alt=\"Login Logo\"\r\n        />\r\n      </div>\r\n      <ListCountdown info={info} />\r\n    </section>\r\n  );\r\n};\r\nexport default SectionBlocked;\r\n","//--|ðŸ Š LandingFooter.tsx ðŸ ˆ|--//\r\n//--|ðŸ ‹ Dependencies ðŸ ‹|--//\r\nimport ReactDOM from 'react-dom/client';\r\nimport axios, { AxiosError } from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useMediaQuery } from 'react-responsive';\r\nimport React, { useState, useEffect } from 'react';\r\n//--|ðŸ ‰ Dependencies ðŸ ‰|--//\r\n//--|ðŸ ‹ Components ðŸ ‹|--//\r\nimport SectionBlocked from '../../../components/Section/blocked/Section.blocked';\r\n//--|ðŸ ‰ Components ðŸ ‰|--//\r\n\r\ninterface InfoProps {\r\n  info: {\r\n    resolution: string;\r\n    orientation: 'desktop-landscape' | 'mobile-portrait' | 'tablet-square' | string;\r\n    identification: 'landing' | 'overtime' | 'ticketing' | 'hyperlink';\r\n  };\r\n}\r\nconst LandingFooter: React.FC<InfoProps> = ({ info }) => {\r\n  const blockName: string = 'footer';\r\n  const stateName: 'expanded' | 'collapsed' = 'collapsed';\r\n  const pageName: string = info.identification as 'landing';\r\n\r\n  useEffect(() => {}, [pageName, blockName]);\r\n\r\n  return (\r\n    <footer className={`default-${blockName} collapsed`} id={`${pageName}-${blockName}`} style={{ zIndex: 1 }}>\r\n      {/* <menu>Menu HTML Element</menu> */}\r\n      <SectionBlocked info={info} />\r\n    </footer>\r\n  );\r\n};\r\nexport default LandingFooter;\r\n"],"names":["_ref","pageName","info","identification","_useState2","_slicedToArray","useState","days","hours","minutes","seconds","time","setTime","useEffect","updateText","updateSquare","refreshClock","forEach","unit","wrapper","document","querySelector","concat","counter","scaleFactor","style","fontSize","offsetWidth","window","addEventListener","removeEventListener","refreshSquare","listItem","querySelectorAll","height","refreshTimer","loadTimer","React","className","String","padStart","footer","interval","updateCountdown","targetDate","present","Date","getTime","Math","floor","observeFooter","MutationObserver","mutationsList","_step","_iterator","_createForOfIteratorHelper","s","n","done","mutation","value","attributeName","target","includes","emailInput","console","error","axios","post","email","then","response","data","restrictionExpiresAt","clearInterval","setInterval","err","e","f","observe","attributes","disconnect","r","Array","isArray","_arrayWithHoles","l","t","Symbol","iterator","i","u","a","o","call","next","Object","push","length","_iterableToArrayLimit","_arrayLikeToArray","toString","slice","constructor","name","from","test","_unsupportedIterableToArray","TypeError","_nonIterableRest","_useEmail","useEmail","_usePassword","setEmail","usePassword","password","setPassword","_useState4","zIndex","src","alt","ListCountdown","blockName","id","SectionBlocked"],"sourceRoot":""}