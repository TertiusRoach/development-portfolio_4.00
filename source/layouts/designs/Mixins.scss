//--|ðŸ Š Mixins.scss ðŸ ˆ|--//
@use './Palettes.scss';

//--|ðŸ ‹ Button Designs ðŸ ‹|--//
@mixin button-presets {
  cursor: default;
  div {
    img {
      mask-size: contain;
      mask-position: center;
      mask-repeat: no-repeat;
    }
    img,
    h1,
    h2,
    h3,
    h4,
    h5,
    h6,
    p {
      cursor: pointer;
    }
  }
  &[class*='icon'] {
    padding: 0;
    div {
      img {
        width: 75%;
      }
    }
  }
  &[class*='left'] {
    display: grid;
    grid-template: 1fr auto 1fr / 1fr auto 1fr; //--|ðŸ ˆ rows / columns ðŸ ˆ|--//
    div {
      display: flex;
      grid-area: 2 / 2 / 3 / 3; //--|ðŸ Š row-start / col-start / row-end / col-end ðŸ ˆ|--//
    }
  }
  &[class*='right'] {
    display: grid;
    grid-template: 1fr auto 1fr / 1fr auto 1fr; //--|ðŸ ˆ rows / columns ðŸ ˆ|--//
    div {
      display: flex;
      grid-area: 2 / 2 / 3 / 3; //--|ðŸ Š row-start / col-start / row-end / col-end ðŸ ˆ|--//
    }
  }
  &[class*='center'] {
    display: grid;
    grid-template: 1fr auto 1fr / 1fr auto 1fr; //--|ðŸ ˆ rows / columns ðŸ ˆ|--//
    div {
      display: inherit; //--|ðŸ ˆ display: grid; ðŸ ˆ|--//
      grid-area: 2 / 2 / 3 / 3; //--|ðŸ ˆ row-start / col-start / row-end / col-end ðŸ ˆ|--//
      * {
        margin: 0;
        padding-top: 8px;
        grid-area: 2 / 2 / 3 / 3; //--|ðŸ ˆ row-start / col-start / row-end / col-end ðŸ ˆ|--//
      }
    }
  }
  &[class*='text'] {
    display: grid;
    grid-template: 1fr auto 1fr / 1fr auto 1fr; //--|ðŸ ˆ rows / columns ðŸ ˆ|--//
    div {
      display: inherit; //--|ðŸ ˆ display: grid; ðŸ ˆ|--//
      grid-area: 2 / 2 / 3 / 3; //--|ðŸ ˆ row-start / col-start / row-end / col-end ðŸ ˆ|--//
      * {
        margin: 0;
        grid-area: 2 / 2 / 3 / 3; //--|ðŸ ˆ row-start / col-start / row-end / col-end ðŸ ˆ|--//
      }
    }
  }
}
@mixin button-spacing {
  &[class*='text'],
  &[class*='left'],
  &[class*='right'],
  &[class*='center'] {
    div {
      * {
        line-height: 1;
        white-space: wrap;
        font-weight: bold;
        position: relative;
      }
      h1,
      h2,
      h3,
      h4,
      h5,
      h6 {
        top: 4px;
      }
      p {
        top: 8px;
        padding: 0 8px;
      }
    }
    &[class*='center'] {
      div {
        img {
          height: 100%;
          opacity: 0.25;
        }
      }
    }
  }
}

//--|ðŸ ‹ Button.default.tsx ðŸ ‹|--//
//--|ðŸ Š button-default ðŸ ˆ|--//
@mixin button-default {
  &[class*='landing'] {
    &[class*='dark'] {
      background: Palettes.$indexLand-dark;
      filter: drop-shadow(0 0 2rem rgba(white, 0.125));
      div {
        filter: drop-shadow(0 0 4px rgba(black, 0.75));
        * {
          color: Palettes.$indexLand-light;
        }
        img {
          background: Palettes.$indexLand-light;
        }
      }
    }
    &[class*='light'] {
      background: Palettes.$indexLand-light;
      filter: drop-shadow(0 0 2rem rgba(black, 0.125));
      div {
        filter: drop-shadow(0 0 4px rgba(white, 0.75));
        // filter: drop-shadow(0 0 8px rgba(Palettes.$indexLand-light, 0.5)); //
        * {
          color: Palettes.$indexLand-dark;
        }
        img {
          background: Palettes.$indexLand-dark;
        }
      }
    }
    &[class*='medium'] {
      background: Palettes.$indexLand-medium;
      filter: drop-shadow(0 0 2rem rgba(white, 0.125));
      div {
        filter: drop-shadow(0 0 8px rgba(white, 0.5));
        * {
          color: Palettes.$indexLand-dark;
        }
        img {
          background: Palettes.$indexLand-dark;
        }
      }
    }

    &[class*='dark']:hover {
      background: Palettes.$indexLand-light;
      filter: drop-shadow(0 0 2rem rgba(black, 0.125));
      div {
        filter: drop-shadow(0 0 8px rgba(black, 0.5));
        // filter: drop-shadow(0 0 8px rgba(Palettes.$indexLand-dark, 0.5)); //
        *:hover {
          color: Palettes.$indexLand-dark;
        }
        img {
          background: Palettes.$indexLand-dark;
        }
      }
    }
    &[class*='light']:hover {
      background: Palettes.$indexLand-dark;
      filter: drop-shadow(0 0 2rem rgba(white, 0.125));
      div {
        filter: drop-shadow(0 0 8px rgba(white, 0.5));
        *:hover {
          color: Palettes.$indexLand-light;
        }
        img {
          background: Palettes.$indexLand-light;
          filter: drop-shadow(0 0 8px rgba(black, 0.5));
        }
      }
    }
    &[class*='medium']:hover {
      background: Palettes.$indexLand-medium;
      filter: drop-shadow(0 0 2rem rgba(black, 0.125));
      div {
        filter: drop-shadow(0 0 8px rgba(black, 0.5));
        *:hover {
          color: Palettes.$indexLand-light;
        }
        img {
          background: Palettes.$indexLand-light;
          filter: drop-shadow(0 0 8px rgba(white, 0.5));
        }
      }
    }

    @extend %override-default;
    @extend %transition-default;
  }
  &[class*='overtime'] {
    &[class*='dark'] {
      background: Palettes.$trackDay-dark;
      filter: drop-shadow(0 0 2rem rgba(white, 0.125));
      div {
        filter: drop-shadow(0 0 4px rgba(black, 0.75));
        * {
          color: Palettes.$trackDay-light;
        }
        img {
          background: Palettes.$trackDay-light;
        }
      }
    }
    &[class*='light'] {
      background: Palettes.$trackDay-light;
      filter: drop-shadow(0 0 2rem rgba(black, 0.125));
      div {
        filter: drop-shadow(0 0 4px rgba(white, 0.75));
        * {
          color: Palettes.$trackDay-dark;
        }
        img {
          background: Palettes.$trackDay-dark;
        }
      }
    }
    &[class*='medium'] {
      background: Palettes.$trackDay-medium;
      filter: drop-shadow(0 0 2rem rgba(white, 0.125));
      div {
        filter: drop-shadow(0 0 8px rgba(white, 0.5));
        * {
          color: Palettes.$trackDay-dark;
        }
        img {
          background: Palettes.$trackDay-dark;
        }
      }
    }

    &[class*='dark']:hover {
      background: Palettes.$trackDay-light;
      div {
        filter: drop-shadow(0 0 8px rgba(white, 0.5));
        *:hover {
          color: Palettes.$trackDay-dark;
        }
        img {
          background: Palettes.$trackDay-dark;
        }
      }
    }
    &[class*='light']:hover {
      background: Palettes.$trackDay-dark;
      div {
        filter: drop-shadow(0 0 8px rgba(black, 0.5));
        * {
          color: Palettes.$trackDay-light;
        }
        img {
          background: Palettes.$trackDay-light;
        }
      }
    }
    &[class*='medium']:hover {
      background: Palettes.$trackDay-medium;
      filter: drop-shadow(0 0 1rem rgba(black, 0.75));
      div {
        filter: drop-shadow(0 0 8px rgba(black, 0.5));
        *:hover {
          color: Palettes.$trackDay-light;
        }
        img {
          background: Palettes.$trackDay-light;
        }
      }
    }

    @extend %override-default;
    @extend %transition-default;
  }
  &[class*='ticketing'] {
    &[class*='dark'] {
      background: Palettes.$logTicket-dark;
      filter: drop-shadow(0 0 2rem rgba(white, 0.125));
      // filter: drop-shadow(0 0 2rem rgba(Palettes.$logTicket-light, 0.125)); //
      div {
        filter: drop-shadow(0 0 4px rgba(black, 0.75));
        // filter: drop-shadow(0 0 8px rgba(Palettes.$logTicket-dark, 0.5)); //
        * {
          color: Palettes.$logTicket-light;
        }
        img {
          background: Palettes.$logTicket-light;
        }
      }
    }
    &[class*='light'] {
      background: Palettes.$logTicket-light;
      filter: drop-shadow(0 0 2rem rgba(black, 0.125));
      // filter: drop-shadow(0 0 2rem rgba(Palettes.$logTicket-dark, 0.125)); //
      div {
        filter: drop-shadow(0 0 4px rgba(white, 0.75));
        // filter: drop-shadow(0 0 8px rgba(Palettes.$logTicket-light, 0.5)); //
        * {
          color: Palettes.$logTicket-dark;
        }
        img {
          background: Palettes.$logTicket-dark;
        }
      }
    }
    &[class*='medium'] {
      background: Palettes.$logTicket-medium;
      filter: drop-shadow(0 0 2rem rgba(white, 0.125));
      div {
        filter: drop-shadow(0 0 8px rgba(white, 0.5));
        * {
          color: Palettes.$logTicket-dark;
        }
        img {
          background: Palettes.$logTicket-dark;
        }
      }
    }

    &[class*='dark']:hover {
      background: Palettes.$logTicket-light;
      filter: drop-shadow(0 0 2rem rgba(black, 0.125));
      // filter: drop-shadow(0 0 2rem rgba(Palettes.$logTicket-dark, 0.125)); //
      div {
        filter: drop-shadow(0 0 8px rgba(black, 0.5));
        // filter: drop-shadow(0 0 8px rgba(Palettes.$logTicket-dark, 0.5)); //
        *:hover {
          color: Palettes.$logTicket-dark;
        }
        img {
          background: Palettes.$logTicket-dark;
        }
      }
    }
    &[class*='light']:hover {
      background: Palettes.$logTicket-dark;
      filter: drop-shadow(0 0 2rem rgba(white, 0.125));
      // filter: drop-shadow(0 0 2rem rgba(Palettes.$logTicket-light, 0.125)); //
      div {
        filter: drop-shadow(0 0 8px rgba(white, 0.5));
        // filter: drop-shadow(0 0 8px rgba(Palettes.$logTicket-light, 0.5)); //
        *:hover {
          color: Palettes.$logTicket-light;
        }
        img {
          background: Palettes.$logTicket-light;
        }
      }
    }
    &[class*='medium']:hover {
      background: Palettes.$logTicket-medium;
      filter: drop-shadow(0 0 2rem rgba(black, 0.125));
      div {
        filter: drop-shadow(0 0 8px rgba(black, 0.5));
        *:hover {
          color: Palettes.$logTicket-light;
        }
        img {
          background: Palettes.$logTicket-light;
        }
      }
    }

    @extend %override-default;
    @extend %transition-default;
  }
  &[class*='hyperlink'] {
    &[class*='dark'] {
      background: Palettes.$findLink-dark;
      filter: drop-shadow(0 0 2rem rgba(white, 0.125));
      // filter: drop-shadow(0 0 2rem rgba(Palettes.$findLink-light, 0.125)); //
      div {
        filter: drop-shadow(0 0 4px rgba(black, 0.75));
        // filter: drop-shadow(0 0 8px rgba(Palettes.$findLink-dark, 0.5)); //
        * {
          color: Palettes.$findLink-light;
        }
        img {
          background: Palettes.$findLink-light;
        }
      }
    }
    &[class*='light'] {
      background: Palettes.$findLink-light;
      filter: drop-shadow(0 0 2rem rgba(black, 0.125));
      // filter: drop-shadow(0 0 2rem rgba(Palettes.$findLink-dark, 0.125)); //
      div {
        filter: drop-shadow(0 0 4px rgba(white, 0.75));
        // filter: drop-shadow(0 0 8px rgba(Palettes.$findLink-light, 0.5)); //
        * {
          color: Palettes.$findLink-dark;
        }
        img {
          background: Palettes.$findLink-dark;
        }
      }
    }
    &[class*='medium'] {
      background: Palettes.$findLink-medium;
      filter: drop-shadow(0 0 2rem rgba(white, 0.125));
      div {
        filter: drop-shadow(0 0 8px rgba(white, 0.5));
        * {
          color: Palettes.$findLink-dark;
        }
        img {
          background: Palettes.$findLink-dark;
        }
      }
    }

    &[class*='dark']:hover {
      background: Palettes.$findLink-light;
      filter: drop-shadow(0 0 2rem rgba(black, 0.125));
      // filter: drop-shadow(0 0 2rem rgba(Palettes.$findLink-dark, 0.125)); //
      div {
        filter: drop-shadow(0 0 8px rgba(black, 0.5));
        // filter: drop-shadow(0 0 8px rgba(Palettes.$findLink-dark, 0.5)); //
        *:hover {
          color: Palettes.$findLink-dark;
        }
        img {
          background: Palettes.$findLink-dark;
        }
      }
    }
    &[class*='light']:hover {
      background: Palettes.$findLink-dark;
      filter: drop-shadow(0 0 2rem rgba(white, 0.125));
      // filter: drop-shadow(0 0 2rem rgba(Palettes.$findLink-light, 0.125)); //
      div {
        filter: drop-shadow(0 0 8px rgba(white, 0.5));
        // filter: drop-shadow(0 0 8px rgba(Palettes.$findLink-light, 0.5)); //
        *:hover {
          color: Palettes.$findLink-light;
        }
        img {
          background: Palettes.$findLink-light;
        }
      }
    }
    &[class*='medium']:hover {
      background: Palettes.$findLink-medium;
      filter: drop-shadow(0 0 2rem rgba(black, 0.125));
      div {
        filter: drop-shadow(0 0 8px rgba(black, 0.5));
        *:hover {
          color: Palettes.$findLink-light;
        }
        img {
          background: Palettes.$findLink-light;
        }
      }
    }

    @extend %override-default;
    @extend %transition-default;
  }
}
%transition-default {
  &[class*='dark'],
  &[class*='light'],
  &[class*='medium'] {
    transition: background 0.25s ease-in-out;
    div {
      transition: filter 0.25s ease-in-out;
      * {
        transition: color 0.25s ease-in-out;
      }
      img {
        transition: background 0.25s ease-in-out;
      }
    }
  }

  &[class*='dark']:hover,
  &[class*='light']:hover,
  &[class*='medium']:hover {
    transition: background 0.25s ease-in-out;
    div {
      transition: filter 0.25s ease-in-out;
      * {
        transition: color 0.25s ease-in-out;
      }
      img {
        transition: background 0.25s ease-in-out;
      }
    }
  }
}
%override-default {
  &[class*='icon'] {
    background: none !important;
  }
}

//--|ðŸ ‹ Button.grading.tsx ðŸ ‹|--//
//--|ðŸ Š button-grading ðŸ ˆ|--//
@mixin button-grading {
  &[class*='landing'] {
    &[class*='dark'] {
      &[class*='left'] {
        &::before {
          background: linear-gradient(
            90deg,
            rgba(Palettes.$indexLand-dark, 1) 25%,
            rgba(Palettes.$indexLand-medium, 1) 75%,
            rgba(Palettes.$indexLand-light, 1) 100%
          );
        }
        background: linear-gradient(
          90deg,
          rgba(Palettes.$indexLand-light, 1) 25%,
          rgba(Palettes.$indexLand-medium, 1) 75%,
          rgba(Palettes.$indexLand-dark, 1) 100%
        );
      }
      &[class*='right'] {
        &::before {
          background: linear-gradient(
            270deg,
            rgba(Palettes.$indexLand-dark, 1) 25%,
            rgba(Palettes.$indexLand-medium, 1) 75%,
            rgba(Palettes.$indexLand-light, 1) 100%
          );
        }
        background: linear-gradient(
          270deg,
          rgba(Palettes.$indexLand-light, 1) 25%,
          rgba(Palettes.$indexLand-medium, 1) 75%,
          rgba(Palettes.$indexLand-dark, 1) 100%
        );
      }
      @extend %grading-override;
      @extend %grading-palettes;
      @extend %grading-transition;
    }
  }
  &[class*='overtime'] {
    &[class*='dark'] {
      &[class*='left'] {
        &::before {
          background: linear-gradient(
            90deg,
            rgba(Palettes.$trackDay-dark, 1) 25%,
            rgba(Palettes.$trackDay-medium, 1) 75%,
            rgba(Palettes.$trackDay-light, 1) 100%
          );
        }
        background: linear-gradient(
          90deg,
          rgba(Palettes.$trackDay-light, 1) 25%,
          rgba(Palettes.$trackDay-medium, 1) 75%,
          rgba(Palettes.$trackDay-dark, 1) 100%
        );
      }
    }
    @extend %grading-override;
    @extend %grading-palettes;
    @extend %grading-transition;
  }
  &[class*='ticketing'] {
    &[class*='dark'] {
      &[class*='left'] {
        &::before {
          background: linear-gradient(
            90deg,
            rgba(Palettes.$logTicket-dark, 1) 25%,
            rgba(Palettes.$logTicket-medium, 1) 75%,
            rgba(Palettes.$logTicket-light, 1) 100%
          );
        }
        background: linear-gradient(
          90deg,
          rgba(Palettes.$logTicket-light, 1) 25%,
          rgba(Palettes.$logTicket-medium, 1) 75%,
          rgba(Palettes.$logTicket-dark, 1) 100%
        );
      }
    }
    @extend %grading-override;
    @extend %grading-palettes;
    @extend %grading-transition;
  }
  &[class*='hyperlink'] {
    &[class*='dark'] {
      &[class*='left'] {
        &::before {
          background: linear-gradient(
            90deg,
            rgba(Palettes.$findLink-dark, 1) 25%,
            rgba(Palettes.$findLink-medium, 1) 75%,
            rgba(Palettes.$findLink-light, 1) 100%
          );
        }
        background: linear-gradient(
          90deg,
          rgba(Palettes.$findLink-light, 1) 25%,
          rgba(Palettes.$findLink-medium, 1) 75%,
          rgba(Palettes.$findLink-dark, 1) 100%
        );
      }
    }
    @extend %grading-override;
    @extend %grading-palettes;
    @extend %grading-transition;
  }
}
%grading-palettes {
  &[class*='dark'] {
    div {
      filter: drop-shadow(0 0 4px rgba(black, 1));
    }
    &[class*='overtime'] {
      div {
        * {
          color: Palettes.$trackDay-light;
        }
        img {
          background: Palettes.$trackDay-light;
        }
      }
    }
    &[class*='ticketing'] {
      div {
        * {
          color: Palettes.$logTicket-light;
        }
        img {
          background: Palettes.$logTicket-light;
        }
      }
    }
    &[class*='hyperlink'] {
      div {
        * {
          color: Palettes.$findLink-light;
        }
        img {
          background: Palettes.$findLink-light;
        }
      }
    }
    &[class*='landing'] {
      div {
        * {
          color: Palettes.$indexLand-light;
        }
        img {
          background: Palettes.$indexLand-light;
        }
      }
    }
  }
  &[class*='dark']:hover {
    div {
      filter: drop-shadow(0 0 4px rgba(white, 1));
    }
    &[class*='overtime'] {
      div {
        *:hover {
          color: Palettes.$trackDay-dark;
        }
        img {
          background: Palettes.$trackDay-dark;
        }
      }
    }
    &[class*='ticketing'] {
      div {
        *:hover {
          color: Palettes.$logTicket-dark;
        }
        img {
          background: Palettes.$logTicket-dark;
        }
      }
    }
    &[class*='hyperlink'] {
      div {
        *:hover {
          color: Palettes.$findLink-dark;
        }
        img {
          background: Palettes.$findLink-dark;
        }
      }
    }
    &[class*='landing'] {
      div {
        *:hover {
          color: Palettes.$indexLand-dark;
        }
        img {
          background: Palettes.$indexLand-dark;
        }
      }
    }
  }

  &[class*='light'] {
    div {
      filter: drop-shadow(0 0 4px rgba(white, 1));
    }

    &[class*='overtime'] {
      div {
        * {
          color: Palettes.$trackDay-dark;
        }
        img {
          background: Palettes.$trackDay-dark;
        }
      }
    }
    &[class*='ticketing'] {
      div {
        * {
          color: Palettes.$logTicket-dark;
        }
        img {
          background: Palettes.$logTicket-dark;
        }
      }
    }
    &[class*='hyperlink'] {
      div {
        * {
          color: Palettes.$findLink-dark;
        }
        img {
          background: Palettes.$findLink-dark;
        }
      }
    }
    &[class*='landing'] {
      div {
        * {
          color: Palettes.$indexLand-dark;
        }
        img {
          background: Palettes.$indexLand-dark;
        }
      }
    }
  }
  &[class*='light']:hover {
    div {
      filter: drop-shadow(0 0 4px rgba(black, 1));
    }

    &[class*='overtime'] {
      div {
        *:hover {
          color: Palettes.$trackDay-light;
        }
        img {
          background: Palettes.$trackDay-light;
        }
      }
    }
    &[class*='ticketing'] {
      div {
        *:hover {
          color: Palettes.$logTicket-light;
        }
        img {
          background: Palettes.$logTicket-light;
        }
      }
    }
    &[class*='hyperlink'] {
      div {
        *:hover {
          color: Palettes.$findLink-light;
        }
        img {
          background: Palettes.$findLink-light;
        }
      }
    }
    &[class*='landing'] {
      div {
        *:hover {
          color: Palettes.$indexLand-light;
        }
        img {
          background: Palettes.$indexLand-light;
        }
      }
    }
  }
}
%grading-override {
  overflow: hidden;
  position: relative;
  &[class*='icon'] {
    background: none !important;
  }
}
%grading-transition {
  &::before {
    inset: 0;
    opacity: 1;
    content: '';
    position: absolute;
    transition: opacity 0.25s ease-in-out;
  }
  &:hover::before {
    opacity: 0;
    transition: opacity 0.25s ease-in-out;
  }
  div {
    h1,
    h2,
    h3,
    h4,
    h5,
    h6,
    p {
      transition: color 0.25s ease-in-out;
    }
    img {
      transition: background 0.25s ease-in-out;
    }
  }
}

//--|ðŸ ‹ Button.stretch.tsx ðŸ ‹|--//
//--|ðŸ Š button-stretch ðŸ ˆ|--//
@mixin button-stretch {
  &[class*='landing'] {
    &[class*='dark'] {
      background: Palettes.$indexLand-dark;
      div {
        filter: drop-shadow(0 0 4px rgba(black, 0.75));
        * {
          color: Palettes.$indexLand-light;
        }
        img {
          background: Palettes.$indexLand-light;
        }
      }
    }
    &[class*='dark']:hover {
      background: Palettes.$indexLand-light;
      div {
        filter: drop-shadow(0 0 8px rgba(black, 0.5));
        *:hover {
          color: Palettes.$indexLand-dark;
        }
        img {
          background: Palettes.$indexLand-dark;
        }
      }
    }

    /*
    &[class*='light'] {
      background: Palettes.$indexLand-light;
      filter: drop-shadow(0 0 2rem rgba(black, 0.125));
      // filter: drop-shadow(0 0 2rem rgba(Palettes.$indexLand-dark, 0.125)); //
      div {
        filter: drop-shadow(0 0 4px rgba(white, 0.75));
        // filter: drop-shadow(0 0 8px rgba(Palettes.$indexLand-light, 0.5)); //
        * {
          color: Palettes.$indexLand-dark;
        }
        img {
          background: Palettes.$indexLand-dark;
        }
      }
    }
    &[class*='medium'] {
      background: Palettes.$indexLand-medium;
      filter: drop-shadow(0 0 2rem rgba(white, 0.125));
      div {
        filter: drop-shadow(0 0 8px rgba(white, 0.5));
        * {
          color: Palettes.$indexLand-dark;
        }
        img {
          background: Palettes.$indexLand-dark;
        }
      }
    }

    &[class*='light']:hover {
      background: Palettes.$indexLand-dark;
      filter: drop-shadow(0 0 2rem rgba(white, 0.125));
      // filter: drop-shadow(0 0 2rem rgba(Palettes.$indexLand-light, 0.125)); //
      div {
        filter: drop-shadow(0 0 8px rgba(white, 0.5));
        // filter: drop-shadow(0 0 8px rgba(Palettes.$indexLand-light, 0.5)); //
        *:hover {
          color: Palettes.$indexLand-light;
        }
        img {
          background: Palettes.$indexLand-light;
          filter: drop-shadow(0 0 8px rgba(black, 0.5));
        }
      }
    }
    &[class*='medium']:hover {
      background: Palettes.$indexLand-medium;
      filter: drop-shadow(0 0 2rem rgba(black, 0.125));
      div {
        filter: drop-shadow(0 0 8px rgba(black, 0.5));
        *:hover {
          color: Palettes.$indexLand-light;
        }
        img {
          background: Palettes.$indexLand-light;
          filter: drop-shadow(0 0 8px rgba(white, 0.5));
        }
      }
    }
    */

    @extend %stretch-override;
    @extend %stretch-transition;
  }
  &[class*='overtime'] {
    &[class*='dark'] {
      background: Palettes.$trackDay-dark;
      div {
        * {
          color: Palettes.$trackDay-light;
        }
        img {
          background: Palettes.$trackDay-light;
          filter: drop-shadow(0 0 4px rgba(black, 0.75));
        }
      }
    }
    &[class*='dark']:hover {
      background: Palettes.$trackDay-light;
      div {
        filter: drop-shadow(0 0 8px rgba(white, 0.75));
        *:hover {
          color: Palettes.$trackDay-dark;
        }
        img {
          background: Palettes.$trackDay-dark;
        }
      }
    }

    /*
    &[class*='light'] {
      background: Palettes.$trackDay-light;
      filter: drop-shadow(0 0 2rem rgba(black, 0.125));
      div {
        filter: drop-shadow(0 0 4px rgba(white, 0.75));
        * {
          color: Palettes.$trackDay-dark;
        }
        img {
          background: Palettes.$trackDay-dark;
        }
      }
    }
    &[class*='medium'] {
      background: Palettes.$trackDay-medium;
      filter: drop-shadow(0 0 2rem rgba(white, 0.125));
      div {
        filter: drop-shadow(0 0 8px rgba(white, 0.5));
        * {
          color: Palettes.$trackDay-dark;
        }
        img {
          background: Palettes.$trackDay-dark;
        }
      }
    }

    &[class*='light']:hover {
      background: Palettes.$trackDay-dark;
      div {
        filter: drop-shadow(0 0 8px rgba(black, 0.5));
        * {
          color: Palettes.$trackDay-medium;
        }
        img {
          background: Palettes.$trackDay-medium;
        }
      }
    }
    &[class*='medium']:hover {
      background: Palettes.$trackDay-medium;
      filter: drop-shadow(0 0 1rem rgba(black, 0.75));
      div {
        filter: drop-shadow(0 0 8px rgba(black, 0.5));
        *:hover {
          color: Palettes.$trackDay-medium;
        }
        img {
          background: Palettes.$trackDay-medium;
        }
      }
    }
    */

    @extend %stretch-override;
    @extend %stretch-transition;
  }
  &[class*='ticketing'] {
    &[class*='dark'] {
      background: Palettes.$logTicket-dark;
      div {
        filter: drop-shadow(0 0 4px rgba(black, 0.75));
        // filter: drop-shadow(0 0 8px rgba(Palettes.$logTicket-dark, 0.5)); //
        * {
          color: Palettes.$logTicket-light;
        }
        img {
          background: Palettes.$logTicket-light;
        }
      }
    }
    &[class*='dark']:hover {
      background: Palettes.$logTicket-light;
      div {
        filter: drop-shadow(0 0 8px rgba(black, 0.5));
        // filter: drop-shadow(0 0 8px rgba(Palettes.$logTicket-dark, 0.5)); //
        *:hover {
          color: Palettes.$logTicket-dark;
        }
        img {
          background: Palettes.$logTicket-dark;
        }
      }
    }

    /*
    &[class*='light'] {
      background: Palettes.$logTicket-light;
      filter: drop-shadow(0 0 2rem rgba(black, 0.125));
      // filter: drop-shadow(0 0 2rem rgba(Palettes.$logTicket-dark, 0.125)); //
      div {
        filter: drop-shadow(0 0 4px rgba(white, 0.75));
        // filter: drop-shadow(0 0 8px rgba(Palettes.$logTicket-light, 0.5)); //
        * {
          color: Palettes.$logTicket-dark;
        }
        img {
          background: Palettes.$logTicket-dark;
        }
      }
    }
    &[class*='medium'] {
      background: Palettes.$logTicket-medium;
      filter: drop-shadow(0 0 2rem rgba(white, 0.125));
      div {
        filter: drop-shadow(0 0 8px rgba(white, 0.5));
        * {
          color: Palettes.$logTicket-dark;
        }
        img {
          background: Palettes.$logTicket-dark;
        }
      }
    }

    &[class*='light']:hover {
      background: Palettes.$logTicket-dark;
      filter: drop-shadow(0 0 2rem rgba(white, 0.125));
      // filter: drop-shadow(0 0 2rem rgba(Palettes.$logTicket-light, 0.125)); //
      div {
        filter: drop-shadow(0 0 8px rgba(white, 0.5));
        // filter: drop-shadow(0 0 8px rgba(Palettes.$logTicket-light, 0.5)); //
        *:hover {
          color: Palettes.$logTicket-light;
        }
        img {
          background: Palettes.$logTicket-light;
        }
      }
    }
    &[class*='medium']:hover {
      background: Palettes.$logTicket-medium;
      filter: drop-shadow(0 0 2rem rgba(black, 0.125));
      div {
        filter: drop-shadow(0 0 8px rgba(black, 0.5));
        *:hover {
          color: Palettes.$logTicket-light;
        }
        img {
          background: Palettes.$logTicket-light;
        }
      }
    }
    */
    @extend %stretch-override;
    @extend %stretch-transition;
  }
  &[class*='hyperlink'] {
    &[class*='dark'] {
      background: Palettes.$findLink-dark;
      div {
        filter: drop-shadow(0 0 4px rgba(black, 0.75));
        // filter: drop-shadow(0 0 8px rgba(Palettes.$findLink-dark, 0.5)); //
        * {
          color: Palettes.$findLink-light;
        }
        img {
          background: Palettes.$findLink-light;
        }
      }
    }
    &[class*='dark']:hover {
      background: Palettes.$findLink-light;
      div {
        filter: drop-shadow(0 0 8px rgba(black, 0.5));
        // filter: drop-shadow(0 0 8px rgba(Palettes.$findLink-dark, 0.5)); //
        *:hover {
          color: Palettes.$findLink-dark;
        }
        img {
          background: Palettes.$findLink-dark;
        }
      }
    }

    /*
    &[class*='light'] {
      background: Palettes.$findLink-light;
      filter: drop-shadow(0 0 2rem rgba(black, 0.125));
      // filter: drop-shadow(0 0 2rem rgba(Palettes.$findLink-dark, 0.125)); //
      div {
        filter: drop-shadow(0 0 4px rgba(white, 0.75));
        // filter: drop-shadow(0 0 8px rgba(Palettes.$findLink-light, 0.5)); //
        * {
          color: Palettes.$findLink-dark;
        }
        img {
          background: Palettes.$findLink-dark;
        }
      }
    }
    &[class*='medium'] {
      background: Palettes.$findLink-medium;
      filter: drop-shadow(0 0 2rem rgba(white, 0.125));
      div {
        filter: drop-shadow(0 0 8px rgba(white, 0.5));
        * {
          color: Palettes.$findLink-dark;
        }
        img {
          background: Palettes.$findLink-dark;
        }
      }
    }

    &[class*='light']:hover {
      background: Palettes.$findLink-dark;
      filter: drop-shadow(0 0 2rem rgba(white, 0.125));
      // filter: drop-shadow(0 0 2rem rgba(Palettes.$findLink-light, 0.125)); //
      div {
        filter: drop-shadow(0 0 8px rgba(white, 0.5));
        // filter: drop-shadow(0 0 8px rgba(Palettes.$findLink-light, 0.5)); //
        *:hover {
          color: Palettes.$findLink-light;
        }
        img {
          background: Palettes.$findLink-light;
        }
      }
    }
    &[class*='medium']:hover {
      background: Palettes.$findLink-medium;
      filter: drop-shadow(0 0 2rem rgba(black, 0.125));
      div {
        filter: drop-shadow(0 0 8px rgba(black, 0.5));
        *:hover {
          color: Palettes.$findLink-light;
        }
        img {
          background: Palettes.$findLink-light;
        }
      }
    }
    */
    @extend %stretch-override;
    @extend %stretch-transition;
  }
}
%stretch-transition {
  transition: background 0.25s ease-in-out;
  div {
    transition: filter 0.25s ease-in-out;
    * {
      transition: color 0.25s ease-in-out;
    }
    img {
      transition: background 0.25s ease-in-out;
    }
  }
}
%stretch-override {
  overflow: hidden;
  &[class*='icon'],
  &[class*='center'] {
    background: none !important;
  }
}
