@mixin desktop-landscape {
  //--|ğŸ Š display: grid; ğŸ ˆ|--//
  grid-template: 4rem 1fr 4rem / 1fr 1fr; //~~|ğŸ Š rows / columns ğŸ ˆ|~~//
  header[class*='foreground'] {
    background: rgba($green-neon, 0.75);
    grid-area: 1 / 1 / 2 / 2; //~~|ğŸ Š row-start / col-start / row-end / col-end ğŸ ˆ|~~//
  }
  footer[class*='midground'] {
    background: rgba($green-neon, 0.75);
    grid-area: 3 / 1 / 4 / 2; //~~|ğŸ Š row-start / col-start / row-end / col-end ğŸ ˆ|~~//
  }

  div[class*='background'] {
    display: inherit; //~~|ğŸ ˆ display: grid; ğŸ ˆ|~~//
    grid-area: 1 / 1 / 4 / 3;
    grid-template: 1fr / 1fr 1fr; //~~|ğŸ Š rows / columns ğŸ ˆ|~~//
    ul {
      margin: 4rem 0;
      padding: 0;
      grid-area: 1 / 1 / 2 / 2;
      background: rgba($green-dark, 0.75);
    }
    article {
      grid-area: 1 / 2 / 2 / 3;
      background: rgba($green-light, 0.75);
    }
  }
}
@mixin mobile-portrait {
  //--|ğŸ Š display: grid; ğŸ ˆ|--//
  grid-template: 6rem 1fr 6rem / 1fr; //~~|ğŸ Š rows / columns ğŸ ˆ|~~//
  header[class*='foreground'] {
    background: rgba($green-neon, 0.75);
    grid-area: 1 / 1 / 2 / 2; //~~|ğŸ Š row-start / col-start / row-end / col-end ğŸ ˆ|~~//
  }
  footer[class*='midground'] {
    background: rgba($green-neon, 0.75);
    grid-area: 3 / 1 / 4 / 2; //~~|ğŸ Š row-start / col-start / row-end / col-end ğŸ ˆ|~~//
  }
  div[class*='background'] {
    display: inherit; //~~|ğŸ ˆ display: grid; ğŸ ˆ|~~//
    grid-area: 2 / 1 / 3 / 2;
    grid-template: 1fr / 1fr; //~~|ğŸ Š rows / columns ğŸ ˆ|~~//
    ul {
      z-index: 1;
      background: rgba($green-dark, 0.5);
    }
    article {
      z-index: 0;
      background: rgba($green-light, 0.5);
    }
    ul,
    article {
      margin: 0;
      padding: 0;
      grid-area: 1 / 1 / 2 / 2;
    }
  }
}

aside[id*='leftbar'] {
  display: grid;
  grid-area: 1 / 1 / 4 / 4; //~~|ğŸ Š row-start / col-start / row-end / col-end ğŸ ˆ|~~//
  &[class*='collapsed'] {
    transition: clip-path 0.25s;
    clip-path: inset(0% 100% 0% 0%); /* Clip the top edge for collapsed state */
  }
  /* Target elements with a class containing 'expanded' */
  &[class*='expanded'] {
    transition: clip-path 0.25s;
    clip-path: inset(0% 0% 0% 0%); /* No clipping for expanded state */
  }

  /* Animate the clip-path on state change (optional) */
  @keyframes showLeftbar {
    from {
      clip-path: inset(0% 0% 0% 100%); /* Clip the right edge for initial state */
      /* Optionally use opacity and blur for additional effects */
      // opacity: 1;
      filter: blur(1rem);
    }
    to {
      clip-path: inset(0% 0% 0% 0%); /* Clip back to normal on expanded state */
      // opacity: 1; /* Uncomment for opacity fade */
      filter: blur(0); /* Uncomment for blur effect */
    }
  }

  //--|ğŸ ‹ Mobile (Portrait) ğŸ ‹|--//
  @media screen and (orientation: portrait) {
    @include mobile-portrait();
  }
  //--|ğŸ ‹ Desktop (Landscape) ğŸ ‹|--//
  @media screen and (orientation: landscape) {
    @include desktop-landscape();
  }
}
